######## 리스트(list) ########
# 여러 개의 자료가 순차적으로 저장되는 구조

# 리스트 생성
L = [1, 2, 3, 4, 5]

# 문자열과 마찬가지로 인덱싱과 슬라이싱이 가능함
print(L[0], L[:-1], L[0:], L[:], L[::2])
print(len(L), type(L))

# 리스트의 0번 인덱스의 값을 100으로 변경
L[0] = 100
print(L)

# 리스트를 2만큼 반복하여 하나의 리스트로 반환
print(L * 2)

# 리스트에 리스트를 연결해 새로운 하나의 리스트로 반환
print(L + [2, 3])
# 리스트 L 안에 4가 존재하는지 여부
print(4 in L)
# 리스트 원소(index 0~1)에 대한 슬라이싱을 이용한 삭제
L[0:2] = []
print(L)
# 리스트 원소(index 1)에 대한 슬라이싱을 이용한 추가
L[1:1] = [987, 456, 123]
print(L)
# 리스트 원소(index 2부터)에 대한 슬라이싱을 이용한 치환
L[2:] = [1, 2, 3]
print(L)

# 중첩 리스트 - 리스트 안의 요소에 리스트를 가지는 리스트
L = [1, 2, 3, 4, 5]
L2 = [6, 7, 8, 9, 10]
L[0] = L2
print(L, " : ", L[0][3], L[0][::-1])

# range() 함수를 이용해 여러 변수에 값 할당
sun, mon, tue, wed, thu, fri, sat = range(7)
print(sun, mon, tue, wed, thu, fri, sat)

# del() 함수를 이용한 리스트 원소(index 0~1) 삭제
del L[0:2]
print(L)

# 리스트를 생성하고 f를 L3의 뒤에 추가한다.
L3 = ["b", "c", "a", "e", "d", "a"]
L3.append("f")
print(L3, "d의 index :", L3.index("d"))

# sorted() 함수는 지정한 리스트를 복사해 정렬한 후 반환한다.
L4 = sorted(L3)
print(L3, " - ",  L4)

# sort() 메서드는 리스트를 내부적으로 정렬한다.
L3.sort()
print(L3, " - ",  L4)

# reversed() 함수는 리스트를 복사해 역순으로 변경한 후 반환한다.
L4 = reversed(L3)
print(L3, " - ",  L4)

# reverse() 메서드는 리스트 내부를 역순으로 변경한다.
L3.reverse()
print(L3, " - ",  L4)

# copy() 메서드는 리스트를 복사해 반환
print(L3.count("a"), " - ", L3.copy())

# pop() 메서드는 지정한 index의 요소를 가져오고 리스트에서 삭제한다.
# 인수를 지정하지 않으면 맨 뒤의 항목을 가져오고 리스트에서 삭제한다.
print(L3.pop(), " - ", L3)

print(L3.pop(2), " - ", L3)

# remove() 메서드는 지정한 값에 해당하는 항목을 삭제한다.
# 지정한 값과 일치하는 항목이 없다면 에러가 발생한다.
print(L3.remove("e"), " - ", L3)